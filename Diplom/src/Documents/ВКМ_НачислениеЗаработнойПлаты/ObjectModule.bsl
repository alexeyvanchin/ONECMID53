#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОбработчикиСобытий
	
Процедура ОбработкаПроведения(Отказ, РежимПроведения)

	Движения.ВКМ_ОсновныеНачисления.Записывать = Истина;
	Движения.ВКМ_ДополнительныеНачисления.Записывать = Истина;
	Движения.ВКМ_Удержания.Записывать = Истина;
				
	// Создание движений: Начисление оклада
	// Запись движений: Процент от выполненных работ
	Запрос = Новый Запрос;
	Запрос.Текст =
		"ВЫБРАТЬ
		|	ВКМ_НачислениеЗаработнойПлатыНачисления.Ссылка,
		|	ВКМ_НачислениеЗаработнойПлатыНачисления.Сотрудник КАК Сотрудник,
		|	ВКМ_НачислениеЗаработнойПлатыНачисления.ВидРасчета КАК ВидРасчета,
		|	ВКМ_НачислениеЗаработнойПлатыНачисления.ДатаНачала КАК ДатаНачала,
		|	КОНЕЦПЕРИОДА(ВКМ_НачислениеЗаработнойПлатыНачисления.ДатаОкончания, ДЕНЬ) КАК ДатаОкончания,
		|	ВКМ_НачислениеЗаработнойПлатыНачисления.ГрафикРаботы КАК ГрафикРаботы
		|ПОМЕСТИТЬ втНачисления
		|ИЗ
		|	Документ.ВКМ_НачислениеЗаработнойПлаты.Начисления КАК ВКМ_НачислениеЗаработнойПлатыНачисления
		|ГДЕ
		|	ВКМ_НачислениеЗаработнойПлатыНачисления.Ссылка = &Ссылка
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	втНачисления.Сотрудник КАК Сотрудник,
		|	втНачисления.ВидРасчета КАК ВидРасчета,
		|	НАЧАЛОПЕРИОДА(втНачисления.Ссылка.Дата, МЕСЯЦ) КАК ПериодРегистрации,
		|	втНачисления.ДатаНачала КАК ПериодДействияНачало,
		|	втНачисления.ДатаОкончания КАК ПериодДействияКонец,
		|	втНачисления.ГрафикРаботы КАК ГрафикРаботы,
		|	ЕСТЬNULL(ВКМ_УсловияОплатыСотрудниковСрезПоследних.Оклад, 0) КАК Оклад,
		|	ЕСТЬNULL(ВКМ_ВыполненныеСотрудникомРаботыОбороты.СуммаКОплатеОборот, 0) КАК Процент
		|ИЗ
		|	втНачисления КАК втНачисления
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ВКМ_ВыполненныеСотрудникомРаботы.Обороты(&НачалоПериода, &КонецПериода,,
		|			Сотрудник В
		|			(ВЫБРАТЬ
		|				втНачисления.Сотрудник КАК Сотрудник
		|			ИЗ
		|				втНачисления КАК втНачисления)) КАК ВКМ_ВыполненныеСотрудникомРаботыОбороты
		|		ПО втНачисления.Сотрудник = ВКМ_ВыполненныеСотрудникомРаботыОбороты.Сотрудник
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ВКМ_УсловияОплатыСотрудников.СрезПоследних(&Период, Сотрудник В
		|			(ВЫБРАТЬ
		|				втНачисления.Сотрудник КАК Сотрудник
		|			ИЗ
		|				втНачисления КАК втНачисления)) КАК ВКМ_УсловияОплатыСотрудниковСрезПоследних
		|		ПО втНачисления.Сотрудник = ВКМ_УсловияОплатыСотрудниковСрезПоследних.Сотрудник";
	
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	Запрос.УстановитьПараметр("Период", Дата);
	Запрос.УстановитьПараметр("НачалоПериода", НачалоМесяца(Дата));
	Запрос.УстановитьПараметр("КонецПериода", КонецМесяца(Дата));
	
	Выборка = Запрос.Выполнить().Выбрать();

	Пока Выборка.Следующий() Цикл
		Если Выборка.ВидРасчета = ПланыВидовРасчета.ВКМ_ОсновныеНачисления.Оклад Тогда
			
			Движение = Движения.ВКМ_ОсновныеНачисления.Добавить();
			Движение.Показатель = Выборка.Оклад;
			ЗаполнитьЗначенияСвойств(Движение, Выборка);
			
			Если Выборка.Процент > 0 Тогда
				Движение = Движения.ВКМ_ДополнительныеНачисления.Добавить();
				ЗаполнитьЗначенияСвойств(Движение, Выборка);
				Движение.ВидРасчета = ПланыВидовРасчета.ВКМ_ДополнительныеНачисления.Процент;
				Движение.Сумма = Выборка.Процент;
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;

	// Создание движений: Начисление отпускных
	Запрос = Новый Запрос;
	Запрос.Текст =
		"ВЫБРАТЬ
		|	ВКМ_НачислениеЗаработнойПлатыНачисления.Сотрудник КАК Сотрудник,
		|	ВКМ_НачислениеЗаработнойПлатыНачисления.ВидРасчета КАК ВидРасчета,
		|	НАЧАЛОПЕРИОДА(ВКМ_НачислениеЗаработнойПлатыНачисления.Ссылка.Дата, МЕСЯЦ) КАК ПериодРегистрации,
		|	ВКМ_НачислениеЗаработнойПлатыНачисления.ДатаНачала КАК ПериодДействияНачало,
		|	ВКМ_НачислениеЗаработнойПлатыНачисления.ДатаОкончания КАК ПериодДействияКонец,
		|	ВКМ_НачислениеЗаработнойПлатыНачисления.ГрафикРаботы КАК ГрафикРаботы,
		|	НАЧАЛОПЕРИОДА(ДОБАВИТЬКДАТЕ(ВКМ_НачислениеЗаработнойПлатыНачисления.ДатаНачала, МЕСЯЦ, -12), МЕСЯЦ) КАК
		|		БазовыйПериодНачало,
		|	КОНЕЦПЕРИОДА(ДОБАВИТЬКДАТЕ(ВКМ_НачислениеЗаработнойПлатыНачисления.ДатаНачала, МЕСЯЦ, -1), МЕСЯЦ) КАК
		|		БазовыйПериодКонец,
		|	РАЗНОСТЬДАТ(ВКМ_НачислениеЗаработнойПлатыНачисления.ДатаНачала,
		|		ВКМ_НачислениеЗаработнойПлатыНачисления.ДатаОкончания, МЕСЯЦ) + 1 КАК КоличествоМесяцев
		|ИЗ
		|	Документ.ВКМ_НачислениеЗаработнойПлаты.Начисления КАК ВКМ_НачислениеЗаработнойПлатыНачисления
		|ГДЕ
		|	ВКМ_НачислениеЗаработнойПлатыНачисления.Ссылка = &Ссылка
		|	И ВКМ_НачислениеЗаработнойПлатыНачисления.ВидРасчета = &ВидРасчетаОтпуск";
	
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	Запрос.УстановитьПараметр("ВидРасчетаОтпуск", ПланыВидовРасчета.ВКМ_ОсновныеНачисления.Отпуск);
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Выборка.Сбросить();
	
	Пока Выборка.Следующий() Цикл
		Если Выборка.КоличествоМесяцев <= 1 Тогда
			Движение = Движения.ВКМ_ОсновныеНачисления.Добавить();
			ЗаполнитьЗначенияСвойств(Движение, Выборка);
		Иначе
			Для НомерМесяца = 1 По Выборка.КоличествоМесяцев Цикл
				НачМесяца = НачалоМесяца(ДобавитьМесяц(Выборка.ПериодДействияНачало, НомерМесяца - 1));
				КонМесяца = КонецМесяца(НачМесяца);
				
				Движение = Движения.ВКМ_ОсновныеНачисления.Добавить();
				ЗаполнитьЗначенияСвойств(Движение, Выборка);
                Движение.ПериодДействияНачало = Макс(НачМесяца, Выборка.ПериодДействияНачало);
				Движение.ПериодДействияКонец = Мин(КонМесяца, Выборка.ПериодДействияКонец);
			КонецЦикла;
		КонецЕсли;
	КонецЦикла;
	
	// Формирование сторно-записей
	СторноЗаписи = Движения.ВКМ_ОсновныеНачисления.ПолучитьДополнение();
	
	Для Каждого Строка Из СторноЗаписи Цикл
		Движение = Движения.ВКМ_ОсновныеНачисления.Добавить();
		ЗаполнитьЗначенияСвойств(Движение, Строка);
		Движение.ПериодРегистрации = Дата;
		Движение.ПериодДействияНачало = Строка.ПериодДействияНачалоСторно;
		Движение.ПериодДействияКонец = Строка.ПериодДействияКонецСторно;
		Движение.Сторно = Истина;
	КонецЦикла;
	
	Движения.Записать();
	
	// Расчет движений: Расчет оклада
	Запрос = Новый Запрос;
	Запрос.Текст =
		"ВЫБРАТЬ
		|	ВКМ_ОсновныеНачисленияДанныеГрафика.НомерСтроки КАК НомерСтроки,
		|	ВКМ_ОсновныеНачисленияДанныеГрафика.Сотрудник КАК Сотрудник,
		|	ВКМ_ОсновныеНачисленияДанныеГрафика.Показатель КАК Оклад,
		|	ЕСТЬNULL(ВКМ_ОсновныеНачисленияДанныеГрафика.ЗначениеПериодДействия, 0) КАК ДниПлан,
		|	ЕСТЬNULL(ВКМ_ОсновныеНачисленияДанныеГрафика.ЗначениеФактическийПериодДействия, 0) КАК ДниФакт
		|ИЗ
		|	РегистрРасчета.ВКМ_ОсновныеНачисления.ДанныеГрафика(Регистратор = &Регистратор
		|	И ВидРасчета = &ВидРасчетаОклад) КАК ВКМ_ОсновныеНачисленияДанныеГрафика";
	
	Запрос.УстановитьПараметр("Регистратор", Ссылка);
	Запрос.УстановитьПараметр("ВидРасчетаОклад", ПланыВидовРасчета.ВКМ_ОсновныеНачисления.Оклад);
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Выборка.Сбросить();
	
	Пока Выборка.Следующий() Цикл
		Движение = Движения.ВКМ_ОсновныеНачисления[Выборка.НомерСтроки - 1];
		
		Если Выборка.ДниПлан <> 0 Тогда
			Движение.Сумма = Выборка.Оклад * Выборка.ДниФакт / Выборка.ДниПлан; 
			Движение.Дней = Выборка.ДниФакт;
		КонецЕсли;	
		Если Движение.Сторно Тогда
			Движение.Сумма = -Движение.Сумма;
			Движение.Дней = -Движение.Дней;
		КонецЕсли;
	КонецЦикла;
	
	Движения.ВКМ_ОсновныеНачисления.Записать(, Истина);
	
	// Расчет движений: Расчет отпускных
	Движения.ВКМ_ОсновныеНачисления.Записывать = Истина;
	
	Запрос = Новый Запрос;
	Запрос.Текст =
		"ВЫБРАТЬ
		|	ВКМ_ОсновныеНачисления.НомерСтроки КАК НомерСтроки,
		|	ВКМ_ОсновныеНачисления.Сотрудник КАК Сотрудник,
		|	ЕСТЬNULL(ВКМ_ОсновныеНачисленияБазаВКМ_ОсновныеНачисления.СуммаБаза, 0) КАК СуммаБазаОсн,
		|	ЕСТЬNULL(ВКМ_ОсновныеНачисленияБазаВКМ_ДополнительныеНачисления.СуммаБаза, 0) КАК СуммаБазаДоп,
		|	ЕСТЬNULL(ВКМ_ОсновныеНачисленияБазаВКМ_ОсновныеНачисления.ДнейБаза, 0) КАК ДнейБаза,
		|	ЕСТЬNULL(ВКМ_ОсновныеНачисленияДанныеГрафика.ЗначениеФактическийПериодДействия, 0) КАК ДниОтпуска
		|ИЗ
		|	РегистрРасчета.ВКМ_ОсновныеНачисления КАК ВКМ_ОсновныеНачисления
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрРасчета.ВКМ_ОсновныеНачисления.БазаВКМ_ОсновныеНачисления(&Измерения, &Измерения,,
		|			Регистратор = &Регистратор
		|		И ВидРасчета = &ВидРасчетаОтпуск) КАК ВКМ_ОсновныеНачисленияБазаВКМ_ОсновныеНачисления
		|		ПО (ВКМ_ОсновныеНачисления.НомерСтроки = ВКМ_ОсновныеНачисленияБазаВКМ_ОсновныеНачисления.НомерСтроки)
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрРасчета.ВКМ_ОсновныеНачисления.БазаВКМ_ДополнительныеНачисления(&Измерения, &Измерения,,
		|			Регистратор = &Регистратор
		|		И ВидРасчета = &ВидРасчетаОтпуск) КАК ВКМ_ОсновныеНачисленияБазаВКМ_ДополнительныеНачисления
		|		ПО (ВКМ_ОсновныеНачисления.НомерСтроки = ВКМ_ОсновныеНачисленияБазаВКМ_ДополнительныеНачисления.НомерСтроки)
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрРасчета.ВКМ_ОсновныеНачисления.ДанныеГрафика(Регистратор = &Регистратор
		|		И ВидРасчета = &ВидРасчетаОтпуск) КАК ВКМ_ОсновныеНачисленияДанныеГрафика
		|		ПО (ВКМ_ОсновныеНачисления.НомерСтроки = ВКМ_ОсновныеНачисленияДанныеГрафика.НомерСтроки)
		|ГДЕ
		|	ВКМ_ОсновныеНачисления.Регистратор = &Регистратор
		|	И ВКМ_ОсновныеНачисления.ВидРасчета = &ВидРасчетаОтпуск";
	
	Измерения = Новый Массив;
	Измерения.Добавить("Сотрудник");
	
	Запрос.УстановитьПараметр("Измерения", Измерения);
	Запрос.УстановитьПараметр("Регистратор", Ссылка);
	Запрос.УстановитьПараметр("ВидРасчетаОтпуск", ПланыВидовРасчета.ВКМ_ОсновныеНачисления.Отпуск);
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Выборка.Сбросить();
	
	Пока Выборка.Следующий() Цикл
		Движение = Движения.ВКМ_ОсновныеНачисления[Выборка.НомерСтроки - 1];
		Движение.Дней = Выборка.ДниОтпуска;
		
		Если Выборка.ДнейБаза = 0 Тогда
			Продолжить;
		КонецЕсли;
		
		Движение.Сумма = (Выборка.СуммаБазаОсн + Выборка.СуммаБазаДоп) * Выборка.ДниОтпуска / Выборка.ДнейБаза;
		
		Если Движение.Сторно Тогда
			Движение.Сумма = -Движение.Сумма;
			Движение.Дней = -Движение.Дней;
		КонецЕсли;
	КонецЦикла;
	
	Движения.ВКМ_ОсновныеНачисления.Записать(, Истина);
			
	СформироватьНДФЛ();
	РасчитатьНДФЛ();	
		
	// Создание движений прихода в регистре накопления ВзаиморасчетыССотрудниками
	Запрос = Новый Запрос;
	Запрос.Текст =
		"ВЫБРАТЬ
		|	ВКМ_НачислениеЗаработнойПлатыНачисления.Сотрудник КАК Сотрудник
		|ПОМЕСТИТЬ втСписокСотрудников
		|ИЗ
		|	Документ.ВКМ_НачислениеЗаработнойПлаты.Начисления КАК ВКМ_НачислениеЗаработнойПлатыНачисления
		|ГДЕ
		|	ВКМ_НачислениеЗаработнойПлатыНачисления.Ссылка = &Ссылка
		|СГРУППИРОВАТЬ ПО
		|	ВКМ_НачислениеЗаработнойПлатыНачисления.Сотрудник
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВКМ_ОсновныеНачисления.Сотрудник КАК Сотрудник,
		|	ЕСТЬNULL(СУММА(ВКМ_ОсновныеНачисления.Сумма), 0) КАК ОснНачисления
		|ПОМЕСТИТЬ втОснНачисления
		|ИЗ
		|	РегистрРасчета.ВКМ_ОсновныеНачисления КАК ВКМ_ОсновныеНачисления
		|ГДЕ
		|	ВКМ_ОсновныеНачисления.Сотрудник В
		|		(ВЫБРАТЬ
		|			втСписокСотрудников.Сотрудник КАК Сотрудник
		|		ИЗ
		|			втСписокСотрудников КАК втСписокСотрудников)
		|	И ВКМ_ОсновныеНачисления.Регистратор = &Ссылка
		|СГРУППИРОВАТЬ ПО
		|	ВКМ_ОсновныеНачисления.Сотрудник
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВКМ_ДополнительныеНачисления.Сотрудник КАК Сотрудник,
		|	ЕСТЬNULL(СУММА(ВКМ_ДополнительныеНачисления.Сумма), 0) КАК ДопНачисления
		|ПОМЕСТИТЬ втДопНачисления
		|ИЗ
		|	РегистрРасчета.ВКМ_ДополнительныеНачисления КАК ВКМ_ДополнительныеНачисления
		|ГДЕ
		|	ВКМ_ДополнительныеНачисления.Сотрудник В
		|		(ВЫБРАТЬ
		|			втСписокСотрудников.Сотрудник КАК Сотрудник
		|		ИЗ
		|			втСписокСотрудников КАК втСписокСотрудников)
		|	И ВКМ_ДополнительныеНачисления.Регистратор = &Ссылка
		|СГРУППИРОВАТЬ ПО
		|	ВКМ_ДополнительныеНачисления.Сотрудник
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВКМ_Удержания.Сотрудник КАК Сотрудник,
		|	ЕСТЬNULL(СУММА(ВКМ_Удержания.Сумма), 0) КАК Удержания
		|ПОМЕСТИТЬ втУдержания
		|ИЗ
		|	РегистрРасчета.ВКМ_Удержания КАК ВКМ_Удержания
		|ГДЕ
		|	ВКМ_Удержания.Сотрудник В
		|		(ВЫБРАТЬ
		|			втСписокСотрудников.Сотрудник КАК Сотрудник
		|		ИЗ
		|			втСписокСотрудников КАК втСписокСотрудников)
		|	И ВКМ_Удержания.Регистратор = &Ссылка
		|СГРУППИРОВАТЬ ПО
		|	ВКМ_Удержания.Сотрудник
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	втОснНачисления.Сотрудник КАК Сотрудник,
		|	ЕСТЬNULL(втОснНачисления.ОснНачисления, 0) КАК ОснНачисления,
		|	ЕСТЬNULL(втДопНачисления.ДопНачисления, 0) КАК ДопНачисления,
		|	ЕСТЬNULL(втУдержания.Удержания, 0) КАК Удержания
		|ИЗ
		|	втОснНачисления КАК втОснНачисления
		|		ЛЕВОЕ СОЕДИНЕНИЕ втДопНачисления КАК втДопНачисления
		|		ПО втОснНачисления.Сотрудник = втДопНачисления.Сотрудник
		|		ЛЕВОЕ СОЕДИНЕНИЕ втУдержания КАК втУдержания
		|		ПО втОснНачисления.Сотрудник = втУдержания.Сотрудник";
	
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	
	Выборка = Запрос.Выполнить().Выбрать();
	Выборка.Сбросить();
	
	Движения.ВКМ_ВзаиморасчетыССотрудниками.Записывать = Истина;
	
	Пока Выборка.Следующий() Цикл
		Движение = Движения.ВКМ_ВзаиморасчетыССотрудниками.ДобавитьПриход();
		ЗаполнитьЗначенияСвойств(Движение, Выборка);
		Движение.Период = Дата;
		Движение.Сумма = Выборка.ОснНачисления + Выборка.ДопНачисления - Выборка.Удержания;
	КонецЦикла;

КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура СформироватьНДФЛ()
	
	СписокСотрудников = Начисления.Выгрузить(,"Сотрудник"); 
	СписокСотрудников.Свернуть("Сотрудник"); 
	
	// регистр BKM_Удержания 
	Движения.ВКМ_Удержания.Записывать = Истина;
	
	Для Каждого Сотрудник Из СписокСотрудников  Цикл
		
		Движение = Движения.ВКМ_Удержания.Добавить(); 
		Движение.Сторно = Ложь;
		Движение.ВидРасчета = ПланыВидовРасчета.ВКМ_Удержания.НДФЛ;
		Движение.ПериодРегистрации = Дата;        
		Движение.БазовыйПериодНачало = НачалоМесяца(Дата);
		Движение.БазовыйПериодКонец = КонецМесяца(Дата);
		Движение.Сотрудник = Сотрудник.Сотрудник;
		
	КонецЦикла;
	
	Движения.ВКМ_Удержания.Записать();	
	
КонецПроцедуры

Процедура РасчитатьНДФЛ()
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ЕСТЬNULL(ВКМ_УдержанияБазаВКМ_ОсновныеНачисления.СуммаБаза, 0) КАК РезультатБазаОсновныеНачисления,
		|	ЕСТЬNULL(ВКМ_УдержанияБазаВКМ_ОсновныеНачисления.НомерСтроки, 0) КАК НомерСтроки
		|ПОМЕСТИТЬ ВТ_ОсновныеНачисления
		|ИЗ
		|	РегистрРасчета.ВКМ_Удержания.БазаВКМ_ОсновныеНачисления(
		|			&Измерения,
		|			&Измерения,
		|			&Разрезы,
		|			Регистратор = &Ссылка
		|				И ВидРасчета = &НДФЛ) КАК ВКМ_УдержанияБазаВКМ_ОсновныеНачисления
		|ГДЕ
		|	ВКМ_УдержанияБазаВКМ_ОсновныеНачисления.Регистратор = ВКМ_УдержанияБазаВКМ_ОсновныеНачисления.РегистраторРазрез
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ЕСТЬNULL(ВКМ_УдержанияБазаВКМ_ДополнительныеНачисления.СуммаБаза, 0) КАК РезультатБазаДополнительныеНачисления,
		|	ЕСТЬNULL(ВКМ_УдержанияБазаВКМ_ДополнительныеНачисления.НомерСтроки, 0) КАК НомерСтроки
		|ПОМЕСТИТЬ ВТ_ДополнительныеНачисления
		|ИЗ
		|	РегистрРасчета.ВКМ_Удержания.БазаВКМ_ДополнительныеНачисления(
		|			&Измерения,
		|			&Измерения,
		|			&Разрезы,
		|			Регистратор = &Ссылка
		|				И ВидРасчета = &НДФЛ) КАК ВКМ_УдержанияБазаВКМ_ДополнительныеНачисления
		|ГДЕ
		|	ВКМ_УдержанияБазаВКМ_ДополнительныеНачисления.Регистратор = ВКМ_УдержанияБазаВКМ_ДополнительныеНачисления.РегистраторРазрез
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ЕСТЬNULL(ВТ_ДополнительныеНачисления.РезультатБазаДополнительныеНачисления, 0) + ЕСТЬNULL(ВТ_ОсновныеНачисления.РезультатБазаОсновныеНачисления, 0) КАК БазаНДФЛ,
		|	ВКМ_Удержания.НомерСтроки КАК НомерСтроки
		|ИЗ
		|	РегистрРасчета.ВКМ_Удержания КАК ВКМ_Удержания
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ОсновныеНачисления КАК ВТ_ОсновныеНачисления
		|		ПО ВКМ_Удержания.НомерСтроки = ВТ_ОсновныеНачисления.НомерСтроки
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ДополнительныеНачисления КАК ВТ_ДополнительныеНачисления
		|		ПО ВКМ_Удержания.НомерСтроки = ВТ_ДополнительныеНачисления.НомерСтроки
		|ГДЕ
		|	ВКМ_Удержания.Регистратор = &Ссылка
		|	И ВКМ_Удержания.ВидРасчета = &НДФЛ"; 
	
	
	Запрос.УстановитьПараметр("НДФЛ", ПланыВидовРасчета.ВКМ_Удержания.НДФЛ);   
	Запрос.УстановитьПараметр("Ссылка", Ссылка);

	Измерения = Новый Массив; 
	Измерения.Добавить("Сотрудник");                                 
	
	Разрезы = Новый Массив; 
	Разрезы.Добавить("Регистратор");

	Запрос.УстановитьПараметр("Разрезы", Разрезы);
	Запрос.УстановитьПараметр("Измерения", Измерения);
	
	
	Выборка = Запрос.Выполнить().Выбрать();
		
	Пока Выборка.Следующий() Цикл
		
		Движение = Движения.ВКМ_Удержания[Выборка.НомерСтроки - 1];
		Движение.Сумма = Выборка.БазаНДФЛ * 13 / 100;
		
	КонецЦикла;	

	Движения.ВКМ_Удержания.Записать(,Истина);
	
КонецПроцедуры

#КонецОбласти

#КонецЕсли

