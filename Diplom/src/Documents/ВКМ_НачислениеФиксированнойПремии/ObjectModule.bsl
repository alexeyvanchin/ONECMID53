
#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда
	
#Область ОбработчикиСобытий

Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	
	Движения.ВКМ_ДополнительныеНачисления.Записывать = Истина;
	Движения.ВКМ_Удержания.Записывать = Истина;
	
	// Запись движений: Фиксированная премия и НДФЛ			
	Запрос = Новый Запрос;
	Запрос.Текст =
		"ВЫБРАТЬ
		|	ВКМ_НачислениеФиксированнойПремииНачисления.Сотрудник КАК Сотрудник,
		|	ВКМ_НачислениеФиксированнойПремииНачисления.СуммаПремии КАК Сумма,
		|	НАЧАЛОПЕРИОДА(ВКМ_НачислениеФиксированнойПремииНачисления.Ссылка.Дата, МЕСЯЦ) КАК ПериодРегистрации,
		|	ВКМ_НДФЛ.Значение КАК НДФЛ
		|ИЗ
		|	Документ.ВКМ_НачислениеФиксированнойПремии.Начисления КАК ВКМ_НачислениеФиксированнойПремииНачисления,
		|	Константа.ВКМ_НДФЛ КАК ВКМ_НДФЛ
		|ГДЕ
		|	ВКМ_НачислениеФиксированнойПремииНачисления.Ссылка = &Ссылка";
	
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Выборка = РезультатЗапроса.Выбрать();
	Выборка.Сбросить();
	
	Пока Выборка.Следующий() Цикл
		Движение = Движения.ВКМ_ДополнительныеНачисления.Добавить();
		ЗаполнитьЗначенияСвойств(Движение, Выборка);
		Движение.Регистратор = Ссылка;
		Движение.ВидРасчета = ПланыВидовРасчета.ВКМ_ДополнительныеНачисления.ФиксированнаяПремия;
		
		Движение = Движения.ВКМ_Удержания.Добавить();
		ЗаполнитьЗначенияСвойств(Движение, Выборка);
		Движение.Регистратор = Ссылка;
		Движение.ВидРасчета = ПланыВидовРасчета.ВКМ_Удержания.НДФЛ;
		Движение.Сумма = Выборка.Сумма * Выборка.НДФЛ / 100;
	КонецЦикла;
	
	Движения.Записать();
	
	// Создание движений прихода в регистре накопления ВзаиморасчетыССотрудниками 
	Запрос = Новый Запрос;
	Запрос.Текст =
		"ВЫБРАТЬ
		|	ВКМ_НачислениеФиксированнойПремииНачисления.Сотрудник КАК Сотрудник
		|ПОМЕСТИТЬ втСписокСотрудников
		|ИЗ
		|	Документ.ВКМ_НачислениеФиксированнойПремии.Начисления КАК ВКМ_НачислениеФиксированнойПремииНачисления
		|ГДЕ
		|	ВКМ_НачислениеФиксированнойПремииНачисления.Ссылка = &Ссылка
		|СГРУППИРОВАТЬ ПО
		|	ВКМ_НачислениеФиксированнойПремииНачисления.Сотрудник
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВКМ_ДополнительныеНачисления.Сотрудник КАК Сотрудник,
		|	ЕСТЬNULL(СУММА(ВКМ_ДополнительныеНачисления.Сумма), 0) КАК ДопНачисления,
		|	ЕСТЬNULL(СУММА(ВКМ_Удержания.Сумма), 0) КАК Удержания
		|ИЗ
		|	РегистрРасчета.ВКМ_ДополнительныеНачисления КАК ВКМ_ДополнительныеНачисления
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрРасчета.ВКМ_Удержания КАК ВКМ_Удержания
		|		ПО ВКМ_ДополнительныеНачисления.Сотрудник = ВКМ_Удержания.Сотрудник
		|ГДЕ
		|	ВКМ_ДополнительныеНачисления.Сотрудник В
		|		(ВЫБРАТЬ
		|			втСписокСотрудников.Сотрудник КАК Сотрудник
		|		ИЗ
		|			втСписокСотрудников КАК втСписокСотрудников)
		|	И ВКМ_ДополнительныеНачисления.Регистратор = &Ссылка
		|	И ВКМ_Удержания.Регистратор = &Ссылка
		|	И ВКМ_Удержания.Сотрудник В
		|		(ВЫБРАТЬ
		|			втСписокСотрудников.Сотрудник КАК Сотрудник
		|		ИЗ
		|			втСписокСотрудников КАК втСписокСотрудников)
		|СГРУППИРОВАТЬ ПО
		|	ВКМ_ДополнительныеНачисления.Сотрудник";
	
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	
	Выборка = Запрос.Выполнить().Выбрать();
	Выборка.Сбросить();
	
	Движения.ВКМ_ВзаиморасчетыССотрудниками.Записывать = Истина;
	Пока Выборка.Следующий() Цикл
		Движение = Движения.ВКМ_ВзаиморасчетыССотрудниками.ДобавитьПриход();
		ЗаполнитьЗначенияСвойств(Движение, Выборка);
		Движение.Период = Дата;
		Движение.Сумма = Выборка.ДопНачисления - Выборка.Удержания;
	КонецЦикла;
	
	Движения.ВКМ_ВзаиморасчетыССотрудниками.Записать();
КонецПроцедуры

#КонецОбласти

#КонецЕсли
